import type { CodegenConfig } from "@graphql-codegen/cli";
import { schema } from "@acme/graphql";
import { printSchema } from "graphql";

/** This object configures the type code generation for your GraphQL API.
 * For more details about how this works, check the docs at: https://the-guild.dev/graphql/codegen/docs/getting-started
 */
const config: CodegenConfig = {
  /**
   * The schema is the result of the schema generated by Pothos in
   * `@acme/graphql`, and converted to a readable string by `printSchema`.
   */
  schema: printSchema(schema),

  /**
   * This field specifies where the codegen will look for GraphQL operations
   * in order to generate the needed types.
   */
  documents: ["src/**/*.{ts,tsx}"],
  ignoreNoDocuments: true,

  /* By default, the watch mode for the codegen uses the system's native support to watch for changes in the project. Optionally, you can configure to watch to use a time interval pooling in the `watchConfig` object bellow. */
  // watch: true,
  // watchConfig: {
  //   usePolling: true,
  //   interval: 1000,
  // },

  /**
   * This defines where the typings and the client output will be generated.
   */
  generates: {
    "./src/generated/graphql/": {
      preset: "client-preset",
      plugins: [],
    },
  },
};

export default config;
